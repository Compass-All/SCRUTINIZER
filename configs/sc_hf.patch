diff --git a/src/arch/aarch64/hypervisor/handler.c b/src/arch/aarch64/hypervisor/handler.c
index ad062dc2..8f5141a7 100644
--- a/src/arch/aarch64/hypervisor/handler.c
+++ b/src/arch/aarch64/hypervisor/handler.c
@@ -448,6 +448,8 @@ static bool smc_is_blocked(const struct vm *vm, uint32_t func)
 {
 	bool block_by_default = !vm->smc_whitelist.permissive;
 
+	//return false;
+
 	for (size_t i = 0; i < vm->smc_whitelist.smc_count; ++i) {
 		if (func == vm->smc_whitelist.smcs[i]) {
 			return false;
diff --git a/src/arch/aarch64/mm.c b/src/arch/aarch64/mm.c
index db911efd..2f932e77 100644
--- a/src/arch/aarch64/mm.c
+++ b/src/arch/aarch64/mm.c
@@ -397,6 +397,7 @@ void arch_mm_invalidate_stage2_range(uint16_t vmid, ipaddr_t va_begin,
 		for (it = begin; it < end;
 		     it += (UINT64_C(1) << (PAGE_BITS - 12))) {
 			tlbi_reg(ipas2e1is, it);
+			tlbi_reg(ipas2e1is, (it | (1ULL << 63)));
 		}
 
 		/*
diff --git a/src/mm.c b/src/mm.c
index b7e748d2..8f8420ba 100644
--- a/src/mm.c
+++ b/src/mm.c
@@ -1143,5 +1143,19 @@ bool mm_init(struct mpool *ppool)
 	/* Arch-specific stack mapping. */
 	CHECK(arch_stack_mm_init(stage1_locked, ppool));
 
+	//map the TRBE region (size 0xF8000000 : 0xF8000000 +0x2000000 = 0xFA000000)
+	void *va;
+	paddr_t trbe_buf;
+	trbe_buf.pa = 0xF8000000;
+	paddr_t trbe_buf_end;
+	trbe_buf_end.pa = 0xFA000000;
+	va = mm_identity_map(stage1_locked, trbe_buf,
+			      trbe_buf_end, MM_MODE_R | MM_MODE_W, ppool);
+	if (!va) {
+		dlog_info("Unable to map trbe_buf memory.");
+	}
+	dlog_info("trbe: %#x - %#x\n", pa_addr(trbe_buf),
+		  pa_addr(trbe_buf_end));
+
 	return true;
 }
